struct PS_INPUT
{
    float4 TexC : TEXCOORD0;
};
SamplerState TextureSampler
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};

Texture2D TextureA;
Texture2D TextureB;

struct MyStruct
{
	uint pixDiff;
	uint pixDiff2;
};

RWStructuredBuffer<MyStruct> BufferOut;
//groupshared MyStruct BufferOut;

struct PS_OUTPUT
{
    float4 Colour0 : SV_Target0;
};

PS_OUTPUT main( PS_INPUT input )
{
    PS_OUTPUT outPix;
    float4 A = TextureA.Sample(TextureSampler, input.TexC.xy);
    float4 B = TextureB.Sample(TextureSampler, input.TexC.xy);
	
	if(any(A - B))
	{
		InterlockedAdd(BufferOut[0].pixDiff, 1);
		InterlockedAdd(BufferOut[0].pixDiff2, 3);
	}
	
	outPix.Colour0 = float4(1, 1, 1, 1);
	
	return outPix;
}
